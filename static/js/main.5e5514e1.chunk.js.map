{"version":3,"sources":["components/Popular.js","App.js","components/Results.js","components/Battle.js","reportWebVitals.js","index.js"],"names":["LanguagesNav","selected","onUpdateLanguage","className","map","language","style","color","onClick","ReposGrid","repos","repo","index","name","owner","html_url","stargazers_count","forks","open_issues","login","avatar_url","src","alt","href","size","toLocaleString","JSON","stringify","React","Component","App","Results","this","props","Instructions","PlayerInput","state","username","handleSubmit","bind","handleChange","event","preventDefault","onSubmit","setState","target","value","htmlFor","label","type","id","placeholder","autoComplete","onChange","disabled","PlayerPreview","onReset","Battle","playerOne","playerTwo","battle","handleReset","player","Fragment","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAUA,SAASA,EAAT,GAAoD,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,iBAG/B,OACE,oBAAIC,UAAU,cAAd,SAHgB,CAAC,MAAO,aAAc,OAAQ,OAAQ,MAAO,UAIhDC,KAAI,SAACC,GAAD,OACb,6BACE,wBACEF,UAAU,qBACVG,MACED,IAAaJ,EACT,CAAEM,MAAO,oBACT,KAENC,QAAS,kBAAMN,EAAiBG,IAPlC,SASGA,KAVIA,QAuBjB,SAASI,EAAT,GAA4B,IAARC,EAAO,EAAPA,MAClB,OACE,qBAAIP,UAAU,oBAAd,UACGO,EAAMN,KAAI,SAACO,EAAMC,GACqDD,EAA9DE,KAAP,IAAaC,EAAwDH,EAAxDG,MAAOC,EAAiDJ,EAAjDI,SAAUC,EAAuCL,EAAvCK,iBAAkBC,EAAqBN,EAArBM,MAAOC,EAAcP,EAAdO,YAChDC,EAAmBL,EAAnBK,MAAOC,EAAYN,EAAZM,WAEd,OACE,qBAAmBjB,UAAU,gBAA7B,UACE,qBAAIA,UAAU,wBAAd,cAAwCS,EAAQ,KAChD,qBACET,UAAU,SACVkB,IAAKD,EACLE,IAAG,qBAAgBH,KAErB,oBAAIhB,UAAU,cAAd,SACE,mBAAGA,UAAU,OAAOoB,KAAMR,EAA1B,SACGI,MAGL,qBAAIhB,UAAU,YAAd,UACE,+BACE,cAAC,IAAD,CAAQI,MAAM,qBAAqBiB,KAAM,KACzC,mBAAGD,KAAI,6BAAwBJ,GAA/B,SAAyCA,OAE3C,+BACE,cAAC,IAAD,CAAQZ,MAAM,mBAAmBiB,KAAM,KACtCR,EAAiBS,iBAFpB,YAIA,+BACE,cAAC,IAAD,CAAclB,MAAM,qBAAqBiB,KAAM,KAC9CP,EAAMQ,iBAFT,YAIA,+BACE,cAAC,IAAD,CAAuBlB,MAAM,qBAAqBiB,KAAM,KACvDN,EAAYO,iBAFf,uBAzBKV,MAiCb,8BAAMW,KAAKC,UAAUjB,EAAO,KAAM,QASHkB,IAAMC,UC5E5BC,ICXMC,E,4JACnB,WACE,OACE,0CAEE,8BAAML,KAAKC,UAAUK,KAAKC,MAAO,KAAM,Y,GALVJ,aCGrC,SAASK,IACP,OACE,sBAAK/B,UAAU,yBAAf,UACE,oBAAIA,UAAU,wBAAd,0BACA,qBAAIA,UAAU,oDAAd,UACE,+BACE,oBAAIA,UAAU,YAAd,oCACA,cAAC,IAAD,CACEA,UAAU,WACVI,MAAM,oBACNiB,KAAM,SAGV,+BACE,oBAAIrB,UAAU,YAAd,oBACA,cAAC,IAAD,CAAcA,UAAU,WAAWI,MAAM,UAAUiB,KAAM,SAE3D,+BACE,oBAAIrB,UAAU,YAAd,6BACA,cAAC,IAAD,CAAUA,UAAU,WAAWI,MAAM,kBAAkBiB,KAAM,e,IAOjEW,E,kDACJ,WAAYF,GAAQ,IAAD,8BACjB,cAAMA,IAEDG,MAAQ,CACXC,SAAU,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARH,E,gDAWnB,SAAaE,GACXA,EAAMC,iBACNV,KAAKC,MAAMU,SAASX,KAAKI,MAAMC,Y,0BAGjC,SAAaI,GACXT,KAAKY,SAAS,CACZP,SAAUI,EAAMI,OAAOC,U,oBAG3B,WACE,OACE,uBAAM3C,UAAU,gBAAgBwC,SAAUX,KAAKM,aAA/C,UACE,uBAAOS,QAAQ,WAAW5C,UAAU,eAApC,SACG6B,KAAKC,MAAMe,QAEd,sBAAK7C,UAAU,oBAAf,UACE,uBACE8C,KAAK,OACLC,GAAG,WACH/C,UAAU,cACVgD,YAAY,kBACZC,aAAa,MACbN,MAAOd,KAAKI,MAAMC,SAClBgB,SAAUrB,KAAKQ,eAEjB,wBAAQrC,UAAU,eAAe8C,KAAK,SAASK,UAAWtB,KAAKI,MAAMC,SAArE,8B,GAtCgBT,IAAMC,WAoDhC,SAAS0B,EAAT,GAAmD,IAA3BlB,EAA0B,EAA1BA,SAAUmB,EAAgB,EAAhBA,QAASR,EAAO,EAAPA,MACzC,OACE,sBAAK7C,UAAU,gBAAf,UACE,oBAAIA,UAAU,eAAd,SAA8B6C,IAC9B,sBAAK7C,UAAU,eAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBACEA,UAAU,eACVkB,IAAG,6BAAwBgB,EAAxB,iBACHf,IAAG,qBAAgBe,KAErB,mBAAGd,KAAI,6BAAwBc,GAAYlC,UAAU,OAArD,SACGkC,OAGL,wBAAQlC,UAAU,wBAAwBK,QAASgD,EAAnD,SACE,cAAC,IAAD,CAAejD,MAAM,mBAAmBiB,KAAM,a,IAOnCiC,E,kDACnB,WAAYxB,GAAO,IAAD,8BAChB,cAAMA,IAEDG,MAAM,CACTsB,UAAW,KACXC,UAAW,KACXC,QAAQ,GAEV,EAAKtB,aAAa,EAAKA,aAAaC,KAAlB,gBAClB,EAAKsB,YAAc,EAAKA,YAAYtB,KAAjB,gBATH,E,gDAWlB,SAAaW,EAAIY,GACf9B,KAAKY,SAAL,eACGM,EAAKY,M,yBAGV,SAAYZ,GACVlB,KAAKY,SAAL,eACGM,EAAK,S,oBAGV,WAAU,IAAD,OACP,EAAyClB,KAAKI,MAAtCsB,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,UAEnB,OAAY,IAFZ,EAA8BC,OAGrB,cAAC,EAAD,CAASF,UAAWA,EAAWC,UAAWA,IAGjD,eAAC,IAAMI,SAAP,WACE,cAAC7B,EAAD,IAEA,sBAAK/B,UAAU,oBAAf,UACE,oBAAIA,UAAU,wBAAd,qBACA,sBAAKA,UAAU,mBAAf,UACiB,OAAduD,EACC,cAAC,EAAD,CACEV,MAAM,aACNL,SAAU,SAACmB,GAAD,OAAY,EAAKxB,aAAa,YAAawB,MAGvD,cAACP,EAAD,CACElB,SAAUqB,EACVV,MAAM,aACNQ,QAAS,kBAAM,EAAKK,YAAY,gBAGrB,OAAdF,EACC,cAAC,EAAD,CACEX,MAAM,aACNL,SAAU,SAACmB,GAAD,OAAY,EAAKxB,aAAa,YAAawB,MAGvD,cAACP,EAAD,CACElB,SAAUsB,EACVX,MAAM,aACNQ,QAAS,kBAAM,EAAKK,YAAY,mBAIrCH,GAAaC,GACZ,wBACExD,UAAU,yBACVK,QAAS,kBAAI,EAAKoC,SAAS,CAACgB,QAAQ,KAFtC,8B,GA7DwBhC,IAAMC,WC9F3BmC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5e5514e1.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {fetchPopularRepos} from '../utils/api';\nimport {\n  FaUser,\n  FaStar,\n  FaCodeBranch,\n  FaExclamationTriangle,\n} from \"react-icons/fa\";\n\nfunction LanguagesNav({selected, onUpdateLanguage}){\n  const languages = [\"All\", \"JavaScript\", \"Ruby\", \"Java\", \"CSS\", \"Python\"];\n\n  return (\n    <ul className=\"flex-center\">\n      {languages.map((language) => (\n        <li key={language}>\n          <button\n            className=\"btn-clear nav-link\"\n            style={\n              language === selected\n                ? { color: \"rgb(187, 46, 31)\" }\n                : null\n            }\n            onClick={() => onUpdateLanguage(language)}\n          >\n            {language}\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nLanguagesNav.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onUpdateLanguage: PropTypes.func.isRequired\n};\n\nfunction ReposGrid({repos}){\n  return(\n    <ul className='grid space-around'>\n      {repos.map((repo, index)=>{\n        const {name, owner, html_url, stargazers_count, forks, open_issues }=repo\n        const {login, avatar_url}=owner\n\n        return (\n          <li key={html_url} className=\"repo bg-light\">\n            <h4 className=\"header-lg center-text\">#{index + 1}</h4>\n            <img\n              className=\"avatar\"\n              src={avatar_url}\n              alt={`Avatar for ${login}`}\n            />\n            <h2 className=\"center-text\">\n              <a className=\"link\" href={html_url}>\n                {login}\n              </a>\n            </h2>\n            <ul className=\"card-list\">\n              <li>\n                <FaUser color=\"rgb(255, 191, 116)\" size={22} />\n                <a href={`https://github.com/${login}`}>{login}</a>\n              </li>\n              <li>\n                <FaStar color=\"rgb(255, 215, 0)\" size={22} />\n                {stargazers_count.toLocaleString()} stars\n              </li>\n              <li>\n                <FaCodeBranch color=\"rgb(219, 195, 245)\" size={22} />\n                {forks.toLocaleString()} forks\n              </li>\n              <li>\n                <FaExclamationTriangle color=\"rgb(241, 138, 147)\" size={22} />\n                {open_issues.toLocaleString()} open issues\n              </li>\n            </ul>\n          </li>\n        );\n      })}\n      <pre>{JSON.stringify(repos, null, 2)}</pre>\n    </ul>\n  )\n}\n\nReposGrid.propTypes={\n  repos: PropTypes.array.isRequired\n}\n\nexport default class Popular extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLanguage: 'All',\n      repos: {},\n      error: null\n    };\n\n    this.updateLanguage = this.updateLanguage.bind(this);\n    this.isLoading = this.isLoading.bind(this);\n  }\n  componentDidMount(){\n    this.updateLanguage(this.state.selectedLanguage)\n  }\n  updateLanguage(selectedLanguage){\n    this.setState({ selectedLanguage, error: null })\n\n    if(!this.state.repos[selectedLanguage]){\n      fetchPopularRepos(selectedLanguage)\n        .then((data) => {\n          this.setState(({ repos }) => ({\n            repos: {\n              ...repos,\n              [selectedLanguage]: data,\n            },\n          }));\n        })\n        .catch((error) => {\n          console.warn(\"Error fetching repos: \", error);\n\n          this.setState({\n            error: `There was an error fetching the repositories.`,\n          })\n        })\n    } \n  }\n  isLoading(){\n    const {selectedLanguage, repos, error}=this.state\n    return !repos[selectedLanguage] && error===null\n  }\n\n  render() {\n    const {selectedLanguage, repos, error }=this.state\n\n    return (\n      <React.Fragment>\n        <LanguagesNav\n          selected={this.state.selectedLanguage}\n          onUpdateLanguage={this.updateLanguage}\n        />\n\n        {this.isLoading() && <p>LOADING</p>}\n\n        {error && <p>{error}</p>}\n\n        {repos[selectedLanguage] && <ReposGrid repos={repos[selectedLanguage]} />}\n        \n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Popular from './components/Popular';\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Popular />\n    </div>\n  );\n}\n\nexport default App;\n","import React, { Component } from 'react'\n\nexport default class Results extends Component {\n  render() {\n    return (\n      <div>\n        Results\n        <pre>{JSON.stringify(this.props, null, 2)}</pre>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from \"react-icons/fa\";\nimport PropTypes from 'prop-types';\nimport Results from './Results'\n\nfunction Instructions() {\n  return (\n    <div className=\"instructions-container\">\n      <h1 className=\"center-text header-lg\">Instructions</h1>\n      <ol className=\"container-sm grid center-text battle-instructions\">\n        <li>\n          <h3 className=\"header-sm\">Enter two Github users</h3>\n          <FaUserFriends\n            className=\"bg-light\"\n            color=\"rgb(255, 191, 116\"\n            size={140}\n          />\n        </li>\n        <li>\n          <h3 className=\"header-sm\">Battle</h3>\n          <FaFighterJet className=\"bg-light\" color=\"#727272\" size={140} />\n        </li>\n        <li>\n          <h3 className=\"header-sm\">See the winners</h3>\n          <FaTrophy className=\"bg-light\" color=\"rgb(255, 215, 0\" size={140} />\n        </li>\n      </ol>\n    </div>\n  );\n}\n\nclass PlayerInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onSubmit(this.state.username)\n  }\n\n  handleChange(event) {\n    this.setState({\n      username: event.target.value,\n    });\n  }\n  render() {\n    return (\n      <form className=\"column player\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"username\" className=\"player-label\">\n          {this.props.label}\n        </label>\n        <div className=\"row player-inputs\">\n          <input\n            type=\"text\"\n            id=\"username\"\n            className=\"input-light\"\n            placeholder=\"github username\"\n            autoComplete=\"off\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <button className=\"btn dark-btn\" type=\"submit\" disabled={!this.state.username}>\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nPlayerInput.propTypes={\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n}\n\nfunction PlayerPreview({username, onReset, label}){\n  return (\n    <div className=\"column player\">\n      <h3 className=\"player-label\">{label}</h3>\n      <div className=\"row bg-light\">\n        <div className=\"player-info\">\n          <img\n            className=\"avatar-small\"\n            src={`https://github.com/${username}.png?size=200`}\n            alt={`Avatar for ${username}`}\n          />\n          <a href={`https://github.com/${username}`} className=\"link\">\n            {username}\n          </a>\n        </div>\n        <button className=\"btn-clear flex-center\" onClick={onReset}>\n          <FaTimesCircle color='rgb(197, 57, 42)' size={26} />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default class Battle extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state={\n      playerOne: null,\n      playerTwo: null,\n      battle: false\n    }\n    this.handleSubmit=this.handleSubmit.bind(this)\n    this.handleReset = this.handleReset.bind(this);\n  }\n  handleSubmit(id, player){\n    this.setState({\n      [id]: player\n    })\n  }\n  handleReset(id){\n    this.setState({\n      [id]: null\n    })\n  }\n  render() {\n    const { playerOne, playerTwo, battle } = this.state;\n\n    if(battle===true){\n      return <Results playerOne={playerOne} playerTwo={playerTwo} />\n    }\n    return (\n      <React.Fragment>\n        <Instructions />\n\n        <div className=\"players-container\">\n          <h1 className=\"center-text header-lg\">Players</h1>\n          <div className=\"row space-around\">\n            {playerOne === null ? (\n              <PlayerInput\n                label=\"Player One\"\n                onSubmit={(player) => this.handleSubmit(\"playerOne\", player)}\n              />\n            ) : (\n              <PlayerPreview\n                username={playerOne}\n                label=\"Player One\"\n                onReset={() => this.handleReset(\"playerOne\")}\n              />\n            )}\n            {playerTwo === null ? (\n              <PlayerInput\n                label=\"Player Two\"\n                onSubmit={(player) => this.handleSubmit(\"playerTwo\", player)}\n              />\n            ) : (\n              <PlayerPreview\n                username={playerTwo}\n                label=\"Player Two\"\n                onReset={() => this.handleReset(\"playerTwo\")}\n              />\n            )}\n          </div>\n          {playerOne && playerTwo && (\n            <button \n              className='btn dark-btn btn-space'\n              onClick={()=>this.setState({battle: true})}\n            >\n            Battle\n            </button>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Battle from './components/Battle'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Battle />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}