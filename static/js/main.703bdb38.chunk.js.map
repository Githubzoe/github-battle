{"version":3,"sources":["utils/api.js","components/Popular.js","App.js","components/Results.js","components/Battle.js","reportWebVitals.js","index.js"],"names":["params","getErrorMsg","message","username","getRepos","fetch","then","res","json","repos","Error","calculateScore","followers","reduce","count","stargazers_count","getStarCount","getUserData","player","Promise","all","profile","score","LanguagesNav","selected","onUpdateLanguage","className","map","language","style","color","onClick","ReposGrid","repo","index","name","owner","html_url","forks","open_issues","login","avatar_url","src","alt","href","size","toLocaleString","JSON","stringify","React","Component","App","Results","props","state","winner","loser","error","loading","players","this","playerOne","playerTwo","results","sort","a","b","sortPlayers","setState","catch","Instructions","PlayerInput","handleSubmit","bind","handleChange","event","preventDefault","onSubmit","target","value","htmlFor","label","type","id","placeholder","autoComplete","onChange","disabled","PlayerPreview","onReset","Battle","battle","handleReset","Fragment","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.703bdb38.chunk.js","sourcesContent":["/** @format */\n\nconst id = \"YOUR_CLIENT_ID\";\nconst sec = \"YOUR_SECRET_ID\";\nconst params = `?client_id=${id}&client_secret=${sec}`;\n\nfunction getErrorMsg(message, username) {\n  if (message === \"Not Found\") {\n    return `${username} doesn't exist`;\n  }\n\n  return message;\n}\n\nfunction getProfile(username) {\n  return fetch(`https://api.github.com/users/${username}${params}`)\n    .then((res) => res.json())\n    .then((profile) => {\n      if (profile.message) {\n        throw new Error(getErrorMsg(profile.message, username));\n      }\n\n      return profile;\n    });\n}\n\nfunction getRepos(username) {\n  return fetch(\n    `https://api.github.com/users/${username}/repos${params}&per_page=100`\n  )\n    .then((res) => res.json())\n    .then((repos) => {\n      if (repos.message) {\n        throw new Error(getErrorMsg(repos.message, username));\n      }\n\n      return repos;\n    });\n}\n\nfunction getStarCount(repos) {\n  return repos.reduce(\n    (count, { stargazers_count }) => count + stargazers_count,\n    0\n  )\n}\nfunction calculateScore(followers, repos) {\n  return followers * 3 + getStarCount(repos);\n}\n\nfunction getUserData(player) {\n  return Promise.all([getProfile(player), getRepos(player)]).then(\n    ([profile, repos]) => ({\n      profile,\n      score: calculateScore(profile.followers, repos),\n    })\n  );\n}\n\nfunction sortPlayers(players) {\n  return players.sort((a, b) => b.score - a.score);\n}\n\nexport function battle(players) {\n  return Promise.all([\n    getUserData(players[0]),\n    getUserData(players[1]),\n  ]).then((results) => sortPlayers(results));\n}\n\nexport function fetchPopularRepos(language) {\n  const endpoint = window.encodeURI(\n    `https://api.github.com/search/repositories?q=stars:>1+language:${language}&sort=stars&order=desc&type=Repositories`\n  );\n\n  return fetch(endpoint)\n    .then((res) => res.json())\n    .then((data) => {\n      if (!data.items) {\n        throw new Error(data.message);\n      }\n      return data.items;\n    });\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {fetchPopularRepos} from '../utils/api';\nimport {\n  FaUser,\n  FaStar,\n  FaCodeBranch,\n  FaExclamationTriangle,\n} from \"react-icons/fa\";\n\nfunction LanguagesNav({selected, onUpdateLanguage}){\n  const languages = [\"All\", \"JavaScript\", \"Ruby\", \"Java\", \"CSS\", \"Python\"];\n\n  return (\n    <ul className=\"flex-center\">\n      {languages.map((language) => (\n        <li key={language}>\n          <button\n            className=\"btn-clear nav-link\"\n            style={\n              language === selected\n                ? { color: \"rgb(187, 46, 31)\" }\n                : null\n            }\n            onClick={() => onUpdateLanguage(language)}\n          >\n            {language}\n          </button>\n        </li>\n      ))}\n    </ul>\n  )\n}\n\nLanguagesNav.propTypes = {\n  selected: PropTypes.string.isRequired,\n  onUpdateLanguage: PropTypes.func.isRequired\n};\n\nfunction ReposGrid({repos}){\n  return(\n    <ul className='grid space-around'>\n      {repos.map((repo, index)=>{\n        const {name, owner, html_url, stargazers_count, forks, open_issues }=repo\n        const {login, avatar_url}=owner\n\n        return (\n          <li key={html_url} className=\"repo bg-light\">\n            <h4 className=\"header-lg center-text\">#{index + 1}</h4>\n            <img\n              className=\"avatar\"\n              src={avatar_url}\n              alt={`Avatar for ${login}`}\n            />\n            <h2 className=\"center-text\">\n              <a className=\"link\" href={html_url}>\n                {login}\n              </a>\n            </h2>\n            <ul className=\"card-list\">\n              <li>\n                <FaUser color=\"rgb(255, 191, 116)\" size={22} />\n                <a href={`https://github.com/${login}`}>{login}</a>\n              </li>\n              <li>\n                <FaStar color=\"rgb(255, 215, 0)\" size={22} />\n                {stargazers_count.toLocaleString()} stars\n              </li>\n              <li>\n                <FaCodeBranch color=\"rgb(219, 195, 245)\" size={22} />\n                {forks.toLocaleString()} forks\n              </li>\n              <li>\n                <FaExclamationTriangle color=\"rgb(241, 138, 147)\" size={22} />\n                {open_issues.toLocaleString()} open issues\n              </li>\n            </ul>\n          </li>\n        );\n      })}\n      <pre>{JSON.stringify(repos, null, 2)}</pre>\n    </ul>\n  )\n}\n\nReposGrid.propTypes={\n  repos: PropTypes.array.isRequired\n}\n\nexport default class Popular extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      selectedLanguage: 'All',\n      repos: {},\n      error: null\n    };\n\n    this.updateLanguage = this.updateLanguage.bind(this);\n    this.isLoading = this.isLoading.bind(this);\n  }\n  componentDidMount(){\n    this.updateLanguage(this.state.selectedLanguage)\n  }\n  updateLanguage(selectedLanguage){\n    this.setState({ selectedLanguage, error: null })\n\n    if(!this.state.repos[selectedLanguage]){\n      fetchPopularRepos(selectedLanguage)\n        .then((data) => {\n          this.setState(({ repos }) => ({\n            repos: {\n              ...repos,\n              [selectedLanguage]: data,\n            },\n          }));\n        })\n        .catch((error) => {\n          console.warn(\"Error fetching repos: \", error);\n\n          this.setState({\n            error: `There was an error fetching the repositories.`,\n          })\n        })\n    } \n  }\n  isLoading(){\n    const {selectedLanguage, repos, error}=this.state\n    return !repos[selectedLanguage] && error===null\n  }\n\n  render() {\n    const {selectedLanguage, repos, error }=this.state\n\n    return (\n      <React.Fragment>\n        <LanguagesNav\n          selected={this.state.selectedLanguage}\n          onUpdateLanguage={this.updateLanguage}\n        />\n\n        {this.isLoading() && <p>LOADING</p>}\n\n        {error && <p>{error}</p>}\n\n        {repos[selectedLanguage] && <ReposGrid repos={repos[selectedLanguage]} />}\n        \n      </React.Fragment>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Popular from './components/Popular';\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Popular />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport {battle} from '../utils/api';\n\nexport default class Results extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      winner: null,\n      loser: null,\n      error: null,\n      loading: true,\n    };\n  }\n  componentDidMount(){\n    const {playerOne, playerTwo}=this.props\n    battle([playerOne, playerTwo])\n      .then((players)=>{\n        this.setState({\n          winner: players[0],\n          loser: players[1],\n          error: null,\n          loading: false,\n        })\n      }).catch(({message})=>{\n        this.setState({\n          error: message,\n          loading: false\n        })\n      })\n  }\n  render() {\n    return (\n      <div>\n        Results\n        <pre>{JSON.stringify(this.state, null, 2)}</pre>\n      </div>\n    )\n  }\n}\n","import React from \"react\";\nimport { FaUserFriends, FaFighterJet, FaTrophy, FaTimesCircle } from \"react-icons/fa\";\nimport PropTypes from 'prop-types';\nimport Results from './Results'\n\nfunction Instructions() {\n  return (\n    <div className=\"instructions-container\">\n      <h1 className=\"center-text header-lg\">Instructions</h1>\n      <ol className=\"container-sm grid center-text battle-instructions\">\n        <li>\n          <h3 className=\"header-sm\">Enter two Github users</h3>\n          <FaUserFriends\n            className=\"bg-light\"\n            color=\"rgb(255, 191, 116\"\n            size={140}\n          />\n        </li>\n        <li>\n          <h3 className=\"header-sm\">Battle</h3>\n          <FaFighterJet className=\"bg-light\" color=\"#727272\" size={140} />\n        </li>\n        <li>\n          <h3 className=\"header-sm\">See the winners</h3>\n          <FaTrophy className=\"bg-light\" color=\"rgb(255, 215, 0\" size={140} />\n        </li>\n      </ol>\n    </div>\n  );\n}\n\nclass PlayerInput extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    this.props.onSubmit(this.state.username)\n  }\n\n  handleChange(event) {\n    this.setState({\n      username: event.target.value,\n    });\n  }\n  render() {\n    return (\n      <form className=\"column player\" onSubmit={this.handleSubmit}>\n        <label htmlFor=\"username\" className=\"player-label\">\n          {this.props.label}\n        </label>\n        <div className=\"row player-inputs\">\n          <input\n            type=\"text\"\n            id=\"username\"\n            className=\"input-light\"\n            placeholder=\"github username\"\n            autoComplete=\"off\"\n            value={this.state.username}\n            onChange={this.handleChange}\n          />\n          <button className=\"btn dark-btn\" type=\"submit\" disabled={!this.state.username}>\n            Submit\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nPlayerInput.propTypes={\n  onSubmit: PropTypes.func.isRequired,\n  label: PropTypes.string.isRequired\n}\n\nfunction PlayerPreview({username, onReset, label}){\n  return (\n    <div className=\"column player\">\n      <h3 className=\"player-label\">{label}</h3>\n      <div className=\"row bg-light\">\n        <div className=\"player-info\">\n          <img\n            className=\"avatar-small\"\n            src={`https://github.com/${username}.png?size=200`}\n            alt={`Avatar for ${username}`}\n          />\n          <a href={`https://github.com/${username}`} className=\"link\">\n            {username}\n          </a>\n        </div>\n        <button className=\"btn-clear flex-center\" onClick={onReset}>\n          <FaTimesCircle color='rgb(197, 57, 42)' size={26} />\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default class Battle extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state={\n      playerOne: null,\n      playerTwo: null,\n      battle: false\n    }\n    this.handleSubmit=this.handleSubmit.bind(this)\n    this.handleReset = this.handleReset.bind(this);\n  }\n  handleSubmit(id, player){\n    this.setState({\n      [id]: player\n    })\n  }\n  handleReset(id){\n    this.setState({\n      [id]: null\n    })\n  }\n  render() {\n    const { playerOne, playerTwo, battle } = this.state;\n\n    if(battle===true){\n      return <Results playerOne={playerOne} playerTwo={playerTwo} />\n    }\n    return (\n      <React.Fragment>\n        <Instructions />\n\n        <div className=\"players-container\">\n          <h1 className=\"center-text header-lg\">Players</h1>\n          <div className=\"row space-around\">\n            {playerOne === null ? (\n              <PlayerInput\n                label=\"Player One\"\n                onSubmit={(player) => this.handleSubmit(\"playerOne\", player)}\n              />\n            ) : (\n              <PlayerPreview\n                username={playerOne}\n                label=\"Player One\"\n                onReset={() => this.handleReset(\"playerOne\")}\n              />\n            )}\n            {playerTwo === null ? (\n              <PlayerInput\n                label=\"Player Two\"\n                onSubmit={(player) => this.handleSubmit(\"playerTwo\", player)}\n              />\n            ) : (\n              <PlayerPreview\n                username={playerTwo}\n                label=\"Player Two\"\n                onReset={() => this.handleReset(\"playerTwo\")}\n              />\n            )}\n          </div>\n          {playerOne && playerTwo && (\n            <button \n              className='btn dark-btn btn-space'\n              onClick={()=>this.setState({battle: true})}\n            >\n            Battle\n            </button>\n          )}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Battle from './components/Battle'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Battle />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}